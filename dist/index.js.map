{
  "version": 3,
  "sources": ["../lib/main.js", "../lib/index.js"],
  "sourcesContent": ["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2025 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isCollection = require( '@stdlib/assert-is-collection' );\nvar isFunction = require( '@stdlib/assert-is-function' );\nvar strided = require( '@stdlib/stats-base-range-by' ).ndarray;\nvar format = require( '@stdlib/string-format' );\n\n\n// MAIN //\n\n/**\n* Computes the range of an array via a callback function.\n*\n* @param {Collection} x - input array\n* @param {Callback} clbk - callback\n* @param {*} [thisArg] - execution context\n* @throws {TypeError} first argument must be an array-like object\n* @throws {TypeError} second argument must be a function\n* @returns {number} range\n*\n* @example\n* var x = [ -2.0, 1.0, 3.0, -5.0, 4.0, 0.0, -1.0, -3.0 ];\n*\n* function accessor( v ) {\n*     return v * 2.0;\n* }\n*\n* var v = rangeBy( x, accessor );\n* // returns 18.0\n*/\nfunction rangeBy( x, clbk, thisArg ) {\n\tif ( !isCollection( x ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an array-like object. Value: `%s`.', x ) );\n\t}\n\tif ( !isFunction( clbk ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a function. Value: `%s`.', clbk ) );\n\t}\n\treturn strided( x.length, x, 1, 0, wrapper );\n\n\t/**\n\t* Invokes a provided callback.\n\t*\n\t* @private\n\t* @param {*} value - current element\n\t* @param {NonNegativeInteger} aidx - current array index\n\t* @param {NonNegativeInteger} sidx - current strided index\n\t* @param {Collection} arr - input array\n\t* @returns {number} callback return value\n\t*/\n\tfunction wrapper( value, aidx, sidx, arr ) {\n\t\treturn clbk.call( thisArg, value, aidx, arr );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = rangeBy;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2025 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute the range of an array via a callback function.\n*\n* @module @stdlib/stats-array-range-by\n*\n* @example\n* var rangeBy = require( '@stdlib/stats-array-range-by' );\n*\n* function accessor( v ) {\n*     return v * 2.0;\n* }\n*\n* var x = [ -2.0, 1.0, 3.0, -5.0, 4.0, 0.0, -1.0, -3.0 ];\n*\n* var v = rangeBy( x, accessor );\n* // returns 18.0\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n"],
  "mappings": "uGAAA,IAAAA,EAAAC,EAAA,SAAAC,EAAAC,EAAA,cAsBA,IAAIC,EAAe,QAAS,8BAA+B,EACvDC,EAAa,QAAS,4BAA6B,EACnDC,EAAU,QAAS,6BAA8B,EAAE,QACnDC,EAAS,QAAS,uBAAwB,EAyB9C,SAASC,EAASC,EAAGC,EAAMC,EAAU,CACpC,GAAK,CAACP,EAAcK,CAAE,EACrB,MAAM,IAAI,UAAWF,EAAQ,8EAA+EE,CAAE,CAAE,EAEjH,GAAK,CAACJ,EAAYK,CAAK,EACtB,MAAM,IAAI,UAAWH,EAAQ,qEAAsEG,CAAK,CAAE,EAE3G,OAAOJ,EAASG,EAAE,OAAQA,EAAG,EAAG,EAAGG,CAAQ,EAY3C,SAASA,EAASC,EAAOC,EAAMC,EAAMC,EAAM,CAC1C,OAAON,EAAK,KAAMC,EAASE,EAAOC,EAAME,CAAI,CAC7C,CACD,CAKAb,EAAO,QAAUK,ICrCjB,IAAIS,EAAO,IAKX,OAAO,QAAUA",
  "names": ["require_main", "__commonJSMin", "exports", "module", "isCollection", "isFunction", "strided", "format", "rangeBy", "x", "clbk", "thisArg", "wrapper", "value", "aidx", "sidx", "arr", "main"]
}
